---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import PostCard from '@components/post/PostCard.astro';
import Pagination from '@components/common/Pagination.astro';
import { getPagination } from '@utils/pagination';
import { seoConfig } from '@config';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return !data.draft;
  });
  
  // Get all unique tags
  const tags = [...new Set(posts.flatMap(post => post.data.tags || []))];
  
  return tags.map(tag => {
    // Filter posts by tag
    const tagPosts = posts.filter(post => 
      post.data.tags && post.data.tags.includes(tag)
    ).sort((a, b) => {
      return new Date(b.data.date || 0).getTime() - new Date(a.data.date || 0).getTime();
    });
    
    return {
      params: { tag: tag.toLowerCase() },
      props: { 
        tag,
        posts: tagPosts,
        count: tagPosts.length
      }
    };
  });
}

const { tag, posts, count } = Astro.props;
const basePath = `/tags/${tag.toLowerCase()}`;

// Get pagination data for first page
const { postsPerPage } = getPagination({ 
  page: 1, 
  totalPosts: count, 
  basePath 
});

// Get posts for the first page
const paginatedPosts = posts.slice(0, postsPerPage);

// Set noindex based on site config
const noindex = seoConfig.noindex.includes("/tags") || seoConfig.noindex.includes("*");

// Format the tag name for display
const formattedTag = tag.charAt(0).toUpperCase() + tag.slice(1);
---

<Layout 
  title={`标签：${formattedTag}`}
  description={`浏览所有与 ${formattedTag} 相关的文章`}
  noindex={noindex}
>
  <div class="w-full py-8">
    <header class="mb-10">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        标签： #{formattedTag}
      </h1>
      <p class="text-lg text-gray-700 dark:text-gray-300">
        共 {count} 篇文章
      </p>
    </header>
    
    {count > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {paginatedPosts.map((post) => (
          <PostCard post={post} />
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-gray-600 dark:text-gray-400">No posts found with this tag.</p>
      </div>
    )}
    
    <Pagination
      currentPage={1}
      totalPages={Math.ceil(count / postsPerPage)}
      prevUrl={null}
      nextUrl={count > postsPerPage ? `${basePath}/page/2` : null}
      basePath={basePath}
    />
  </div>
</Layout>
