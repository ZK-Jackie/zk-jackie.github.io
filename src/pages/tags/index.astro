---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import Link from '@components/common/Link.astro';
import { keyToSlug } from '@utils/taxonomyUtils';
import {notDataDraft} from "@utils/collectionUtils";
import {isAlpha} from "@utils/stringUtils";

// 获取所有文章
const posts = await getCollection('posts', notDataDraft);

// 获取所有文章中存在的标签集合
const allPostTags = [...new Set(posts.flatMap(post => post.data.tags || []))];


const tagCounts = await Promise.all(
  allPostTags.map(async postTag => {
    const count = posts.filter(post => 
      post.data.tags && post.data.tags.includes(postTag)
    ).length;
    
    const slug = await keyToSlug('tags', postTag);
    
    return {
      name: postTag,
      count,
      slug
    };
  })
);

// Sort by post count (descending)
tagCounts.sort((a, b) => b.count - a.count);
---

<Layout 
  title={`标签`}
  description="浏览博客的所有标签和主题"
>
  <div class="w-full py-8">
    <header class="mb-10">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        标签
      </h1>
      <p class="text-lg text-gray-700 dark:text-gray-300">
        按照标签筛选文章
      </p>
    </header>
    
    <div class="flex flex-wrap gap-3">
      {tagCounts.map(({ name, count, slug }) => (
        <Link href={`/tags/${slug}`}
              class="flex items-center gap-2 px-4 py-2 bg-white dark:bg-gray-800 rounded-full shadow-sm hover:shadow-md transition-shadow border border-gray-200 dark:border-gray-700"
        >
          <span class="font-medium text-gray-900 dark:text-white">
            #{name}
          </span>
          <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs font-medium px-2.5 py-0.5 rounded-full">
            {count}
          </span>
        </Link>
      ))}
    </div>
    
    {tagCounts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-600 dark:text-gray-400">暂无标签</p>
      </div>
    )}
  </div>
</Layout>
