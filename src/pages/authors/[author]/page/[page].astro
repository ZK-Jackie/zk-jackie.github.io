---
import Layout from '@layouts/Layout.astro';
import PostCard from '@components/post/PostCard.astro';
import Pagination from '@components/common/Pagination.astro';
import { envConfig, siteConfig } from '@config';
import {
  keyToSlug, 
  getTaxonomyLabel,
  getTaxonomyDescription 
} from '@utils/taxonomyUtils';
import { resolveUrl } from '@utils/pathUtils';
import { CollectionUtils, PostUtils } from "@utils/collectionUtils";
import type { CollectionEntry } from "astro:content";
import type { GetStaticPathsOptions, GetStaticPathsResult, Page } from "astro";


export async function getStaticPaths({ paginate }: GetStaticPathsOptions): Promise<GetStaticPathsResult> {
  const { content: contentConfig } = siteConfig;
  // 获取所有标签及其对应的文章
  const sortedAuthorPostMapping: Map<string, CollectionEntry<"posts">[]> = await new CollectionUtils("posts")
    .filter(PostUtils.filterNotDraft)
    .sortBy(PostUtils.compareByDateDesc)
    .groupBelongTo(PostUtils.authors);

  let paths: GetStaticPathsResult = [];
  for (const [authorKey, authorPosts] of sortedAuthorPostMapping) {
    const slug = await keyToSlug("authors", authorKey);

    // Paginate paths for each category
    const authorPaths = paginate(authorPosts, {
      pageSize: contentConfig.postsPerPage,
      params: { author: slug },
      props: { authorKey }
    });

    paths = paths.concat(authorPaths);
  }
  return paths;
}

interface Props {
  // @Reference https://docs.astro.build/zh-cn/reference/routing-reference/#paginate
  page: Page<CollectionEntry<"posts">>;
  authorKey: string;
}

const { public: publicConfig } = envConfig;
const { authorKey, page } = Astro.props;
const {
  data: currentPosts,
  currentPage,
  lastPage: totalPages,
  url: { prev: prevUrl, next: nextUrl },
} = page;
const basePath = resolveUrl('./', publicConfig.PUBLIC_BASE_URL, Astro.url.pathname);

// Get current locale
const currentLocale = Astro.locals.lang;

// Get localized label and description
const authorLabel = await getTaxonomyLabel('authors', authorKey, currentLocale);
const authorDescription = await getTaxonomyDescription('authors', authorKey, currentLocale);

// Page title and description
const pageTitle = `作者：${authorLabel} - 第${currentPage}页`;
const pageDescription = authorDescription || `${authorLabel}参与的文章 - 第${currentPage}页`;
---

<Layout
  title={pageTitle}
  description={pageDescription}
  noindex={true}
>
  <div class="w-full py-8">
    <header class="mb-10">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        作者：{authorLabel}
      </h1>
      <p class="text-lg text-gray-700 dark:text-gray-300">
        第 {currentPage} 页，共 {totalPages} 页
      </p>
    </header>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {currentPosts.map((post) => (
        <PostCard post={post} />
      ))}
    </div>
    
    <Pagination
      currentPage={currentPage}
      totalPages={totalPages}
      prevUrl={prevUrl}
      nextUrl={nextUrl}
      basePath={basePath}
    />
  </div>
</Layout>
