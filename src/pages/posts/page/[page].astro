---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import PostCard from '@components/post/PostCard.astro';
import Pagination from '@components/common/Pagination.astro';
import { siteConfig } from '@config';
import { getPagination } from '@utils/pagination';
import {notDataDraft} from "@utils/collectionUtils";

export async function getStaticPaths() {
  const {content: contentConfig} = siteConfig;
  const posts = await getCollection('posts', notDataDraft);
  
  // Sort posts by date (newest first)
  const sortedPosts = posts.sort((a, b) => {
    if (!a.data.publishTime) return 1;
    if (!b.data.publishTime) return -1;
    return b.data.publishTime.getTime() - a.data.publishTime.getTime();

  });
  
  // Calculate total pages
  const totalPages = Math.ceil(sortedPosts.length / (contentConfig.postsPerPage || 11));
  
  // Generate paths for each page
  return Array.from({ length: totalPages }).map((_, i) => {
    const page = i + 1;
    // Skip page 1 as it's handled by the index.astro
    if (page === 1) return null;
    
    return {
      params: { page: page.toString() },
      props: { 
        posts: sortedPosts,
        page,
        totalPosts: sortedPosts.length
      }
    };
  }).filter(Boolean); // Remove null entries
}

interface Props { 
  posts: Array<any>;
  page: number;
  totalPosts: number;
}

const { posts, page, totalPosts } = Astro.props;
const currentPage = page;
const basePath = '/blog';

// Get pagination data
const { startIndex, endIndex, prevUrl, nextUrl, totalPages } = getPagination({ 
  page: currentPage, 
  totalPosts, 
  basePath 
});

// Get posts for the current page
const paginatedPosts = posts.slice(startIndex, endIndex);
---

<Layout 
  title={`文章列表 - 第${currentPage}页`}
  description={`Explore our articles, tutorials, and insights - Page ${currentPage}`}
  noindex={true}
>
  <main class="w-full py-8">
    <header class="mb-10">
      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">文章</h1>
      <p class="text-lg text-gray-700 dark:text-gray-300">
        Page {currentPage} of {totalPages} - Explore our articles, tutorials, and insights
      </p>
    </header>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {paginatedPosts.map((post) => (
        <PostCard post={post} />
      ))}
    </div>
    
    <Pagination
      currentPage={currentPage}
      totalPages={totalPages}
      prevUrl={prevUrl}
      nextUrl={nextUrl}
      basePath={basePath}
    />
  </main>
</Layout>
